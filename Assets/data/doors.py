# Each location display principle follows the URDL principle.
# (y, x)
doorWayPoint:dict[str,dict[str,dict[str,tuple[tuple[int,int],tuple[int,int],tuple[int,int]]]]] = {
    "Room" : {
        "set" : {
            'U' : ((0, 5) , (0, 6) , (0, 7) ),
            'R' : ((5, 12), (6, 12), (7, 12)),
            'D' : ((12, 5), (12, 6), (12, 7)),
            'L' : ((5, 0) , (6, 0) , (7, 0) )
        },
        "out" : {
            'U' : ((1, 5) , (1, 6) , (1, 7) ),
            'R' : ((5, 11), (6, 11), (7, 11)),
            'D' : ((11, 5), (11, 6), (11, 7)),
            'L' : ((5, 1) , (6, 1) , (7, 1) )
        }
    },
    "HorizonallyLongRoom" : {
        "set" : {
            'U' : ((0, 12) , (0, 13) , (0, 14) ),
            'R' : ((5, 26) , (6, 26) , (7, 26) ),
            'D' : ((12, 12), (12, 13), (12, 14)),
            'L' : ((5, 0)  , (6, 0)  , (7, 0)  )
        },
        "out" : {
            'U' : ((1, 12) , (1, 13) , (1, 14) ),
            'R' : ((5, 25) , (6, 25) , (7, 25) ),
            'D' : ((11, 12), (11, 13), (11, 14)),
            'L' : ((5, 1)  , (6, 1)  , (7, 1)  )
        }
    },
    "VerticallyLongRoom" : {
        "set" : {
            'U' : ((0, 5)  , (0, 6)  , (0, 7)  ),
            'R' : ((12, 12), (13, 12), (14, 12)),
            'D' : ((26, 5) , (26, 6) , (26, 7) ),
            'L' : ((12, 0) , (13, 0) , (14, 0) )
        },
        "out" : {
            'U' : ((1, 5)  , (1, 6)  , (1, 7)  ),
            'R' : ((12, 11), (13, 11), (14, 11)),
            'D' : ((25, 5) , (25, 6) , (25, 7) ),
            'L' : ((12, 1) , (13, 1) , (14, 1) )
        }
    },
    "Diamond" : {
        "set" : {
            'U' : ((0, 6) , (0, 7) , (0, 8) ),
            'R' : ((6, 14), (7, 14), (8, 14)),
            'D' : ((14, 6), (14, 7), (14, 8)),
            'L' : ((6, 0) , (7, 0) , (8, 0) )
        },
        "out" : {
            'U' : ((1, 6) , (1, 7) , (1, 8) ),
            'R' : ((6, 13), (7, 13), (8, 13)),
            'D' : ((13, 6), (13, 7), (13, 8)),
            'L' : ((6, 1) , (7, 1) , (8, 1) )
        }
    },
    "TreasureRoom" : {
        "set" : {
            'U' : ((0, 3), (0, 4), (0, 5)),
            'R' : ((3, 8), (4, 8), (5, 8)),
            'D' : ((8, 3), (8, 4), (8, 5)),
            'L' : ((3, 0), (4, 0), (5, 0))
        },
        "out" : {
            'U' : ((1, 3), (1, 4), (1, 5)),
            'R' : ((3, 7), (4, 7), (5, 7)),
            'D' : ((7, 3), (7, 4), (7, 5)),
            'L' : ((3, 1), (4, 1), (5, 1))
        }
    },
    "Chapel" : {
        "set" : {
            'U' : ((0, 6) , (0, 7) , (0, 8) ),
            'R' : ((6, 14), (7, 14), (8, 14)),
            'D' : ((14, 6), (14, 7), (14, 8)),
            'L' : ((6, 0) , (7, 0) , (8, 0) )
        },
        "out" : {
            'U' : ((1, 6) , (1, 7) , (1, 8) ),
            'R' : ((6, 13), (7, 13), (8, 13)),
            'D' : ((13, 6), (13, 7), (13, 8)),
            'L' : ((6, 1) , (7, 1) , (8, 1) )
        }
    },
    "EndPoint" : {
        "set" : {
            'U' : ((0, 10) , (0, 11) , (0, 12) ),
            'R' : ((10, 22), (11, 22), (12, 22)),
            'D' : ((22, 10), (22, 11), (22, 12)),
            'L' : ((10, 0) , (11, 0) , (12, 0) )
        },
        "out" : {
            'U' : ((1, 10) , (1, 11) , (1, 12) ),
            'R' : ((10, 21), (11, 21), (12, 21)),
            'D' : ((21, 10), (21, 11), (21, 12)),
            'L' : ((10, 1) , (11, 1) , (12, 1) )
        }
    }
}